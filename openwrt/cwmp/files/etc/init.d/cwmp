#!/bin/sh /etc/rc.common
START=90
USE_PROCD=1

validate_cwmp_section()
{
	uci_validate_section cwmp cwmp "${1}" \
		'enabled:bool:0' \
		'url:string' \
		'username:string' \
		'password:string' \
		'local_username:string' \
		'local_password:string' \
		'periodic_enabled:bool:1' \
		'periodic_interval:range(30, 10000)' \
		'connection_port:port' \
		'interface:string'
	return $?
}

prepare_config() {
	local cfg="$1"
	
	config_get enabled "$cfg" enabled 1

	[ "$enabled" = 1 ] || return

	. /etc/openwrt_release
	. /etc/device_info

	json_init
	json_add_string SoftwareVersion "$DISTRIB_CODENAME/$DISTRIB_REVISION"
	for field in Manufacturer ManufacturerOUI ModelName Description ProductClass SerialNumber HardwareVersion; do
		config_get val "$cfg" "$field"
		[ -n "$val" ] || {
			case "$field" in
				Manufacturer) val="${DEVICE_MANUFACTURER:-OpenWrt}";;
				Description|ModelName) val="$DEVICE_PRODUCT";;
				SerialNumber) val="$(cat /sys/class/net/eth0/address | sed 's/://g')";;
				ManufacturerOUI)
					val="$MANUFACTURER_OUI"
					[ -n "$val" ] || {
						val="$(tr 'a-z' 'A-Z' < /sys/class/net/eth0/address)"
						val="${val%:*:*:*}"
						val="${val//:/}"
					}
					;;
				HardwareVersion) val="v0";;
			esac
		}
		json_add_string "$field" "$val"
	done
	json_dump > /tmp/cwmp-device.json

	if cmp -s /tmp/cwmp-device.json /etc/cwmp-device.json; then
		rm -f /tmp/cwmp-device.json
	else
		mv /tmp/cwmp-device.json /etc/cwmp-device.json
	fi

	config_get url "$cfg" url
	config_get connection_port "$cfg" connection_port
	start=1
}

start_service() {
	config_load cwmp
	config_foreach prepare_config cwmp

	[ -n "$start" ] || return

	ubus -t 30 wait_for acs.system

	procd_open_instance cwmpd
	procd_set_param command /usr/sbin/cwmpd
	procd_set_param respawn
	procd_close_instance

	procd_open_instance cwmp-uhttpd
	procd_set_param command /usr/sbin/uhttpd -f -p "${connection_port:-8080}" -x / -h /usr/libexec/cwmp
	procd_set_param respawn

	procd_open_data
	json_add_array firewall

	json_add_object ""
	json_add_string type rule
	json_add_string src "${interface:-wan}"
	json_add_string proto tcp
	json_add_string dest_port "${connection_port:-8080}"
	json_add_string target ACCEPT
	json_close_object

	json_close_array
	procd_close_data

	procd_close_instance
}

service_started() {
	procd_set_config_changed firewall
}

reload_service() {
	start
	ubus -t 10 wait_for cwmp
	ubus -S call cwmp reload
}

boot() {
	start
	ubus -t 10 wait_for cwmp
	ubus -S call cwmp event_add '{ "event": "1 BOOT" }'
}

service_triggers()
{
	procd_add_reload_trigger "cwmp"
	procd_add_validation validate_cwmp_section
}
